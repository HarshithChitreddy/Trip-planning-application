# This file should NOT be changed.
# The application will not deploy correctly if this file is changed.
name: build-and-test

on:
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build-and-test:

    runs-on: [self-hosted, linux, x64]

    strategy:
      matrix:
        node-version: [18.x]

    steps:

    - name: Prepare for checkout # Avoids broken submodule self-hosted runner bug on checkout v2
      run: |
        git checkout -f $(git -c user.name="CS314 Runner" -c user.email="cs314@colostate.edu" commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :

    - uses: actions/checkout@v2

    - name: Release soundness checks
      run: |
        now="$(date +'%Y.%m.%d.%H.%M')"
        if [[ $now < "${{ vars.SPRINT_BEGIN }}" || "${{ vars.SPRINT_END }}" < $now ]]; then
          echo "Releases can not be deployed outside of the sprint dates."
          echo "Sprint begin date:      ${{ vars.SPRINT_BEGIN }}"
          echo "Sprint end date:        ${{ vars.SPRINT_END }}"
          echo "Attempted release date: $now"
          exit 1
        fi
        if [[ ! ${{ github.ref_name }} =~ ^v([1-5]).(0|[1-9][0-9]*)$ ]]; then
          echo "Release tag not in expected format. (vX.X)"
          echo "In your tag, the major version should be your sprint number and the minor version should be 0 or another integer without leading zeros."
          exit 1
        fi
      if: github.event_name == 'release'
    
    - name: Pull request soundness checks
      run: |
        if [[ ! ${{ github.ref_name }} =~ ^([0-9]+)/merge$ ]]; then
          echo "Your pull was submitted before a runner could be assigned to it."
          echo "Do not merge before your code is tested on our servers."
          exit 1
        fi
      if: github.event_name != 'release'

    - name: Prevent submodules from being added
      run: |
        echo "Submodules are not allowed in this repository. If a failure occurs on this step, please remove the submodule."
        substatus=$(git submodule status)
        if [[ $substatus != "" ]]; then
          printf "Submodule status: $substatus\n"
          exit 1
        fi

    - name: Verify about images
      run: check-images
    
    - name: Upload about images
      run: deploy-images
      env:
        GH_REPOSITORY_NAME: ${{ github.event.repository.name }}

    - name: Set up java (jdk-11)
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Install server dependencies
      run: cache_dependencies server
      
    - name: Build & test server with maven
      run: mvn -f server --global-settings server/.m2/settings.xml verify

    - name: Postman tests
      env:
        DEV_PORT_BASE: ${{ vars.DEV_PORT_BASE }}
        DEV_PORT_BLOCK_SIZE: ${{ vars.DEV_PORT_BLOCK_SIZE }}
      run: postman
 
    - name: Deploy server
      env:
        GITHUB_USER: ${{ github.actor }}
        DEV_PORT_BASE: ${{ vars.DEV_PORT_BASE }}
        DEV_PORT_BLOCK_SIZE: ${{ vars.DEV_PORT_BLOCK_SIZE }}
      run: build-test-deploy
    
    - name: Alert on release failure
      env:
        GH_ORGANIZATION_NAME: ${{ github.repository_owner }}
        GH_REPOSITORY_NAME: ${{ github.event.repository.name }}
        GH_RUN_ID_NUMBER: ${{ github.run_id }}
      run: alert immediate release 0
      if: github.event_name == 'release' && failure()
